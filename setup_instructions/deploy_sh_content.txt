#!/bin/bash
# スクリプトの途中でエラーが発生したら、直ちに終了します
set -e

# --- 準備 ---
# 第一引数として 'staging' または 'production' を受け取ります。
ENV=$1

# 引数が指定されていない場合はエラーで終了します。
if [ -z "$ENV" ]; then
  echo "エラー: 環境が指定されていません。'staging' または 'production' を指定してください。"
  exit 1
fi

# ディレクトリパスを定義します（ユーザー名は固定のようですので、スクリプト内に記載します）。
USER_NAME="kanta_maruhashi"
APP_DIR="/app/$USER_NAME"
WEB_DIR="/usr/share/nginx/html/$USER_NAME"

echo "--- ${ENV} 環境へのデプロイを開始します ---"


# --- 1. バックエンドの環境変数を設定 ---
cd "$APP_DIR"
echo "🔧 バックエンドの環境変数を設定中..."

ENV_FILE=".env.${ENV}"
if [ ! -f "$ENV_FILE" ]; then
  echo "エラー: バックエンド用の環境ファイルが見つかりません: ${ENV_FILE}"
  exit 1
fi
# .env.* ファイルを読み込んで、変数をエクスポートします。
set -a
source "$ENV_FILE"
set +a
echo "✅ バックエンドの環境設定完了。"


# --- 2. フロントエンドのファイルをデプロイ ---
echo "📂 フロントエンドのファイルをデプロイ中..."
rm -rf "$WEB_DIR"/*
cp -r ./src/web/* "$WEB_DIR/"

# 環境に応じて、フロントエンド用の設定ファイルを切り替えます。
FRONTEND_CONFIG_SRC=""
if [ "$ENV" = "production" ]; then
  FRONTEND_CONFIG_SRC="prod_config.js"
elif [ "$ENV" = "staging" ]; then
  # ステージング用の設定ファイル名を 'staging_config.js' と想定しています。
  # もしファイルがなければ、作成する必要があります。
  FRONTEND_CONFIG_SRC="staging_config.js"
fi

if [ -f "$WEB_DIR/$FRONTEND_CONFIG_SRC" ]; then
  echo "🔩 フロントエンドの設定ファイルを ${FRONTEND_CONFIG_SRC} に切り替え中..."
  # 既存の config.js があれば削除し、正しい設定ファイルをリネームします。
  rm -f "$WEB_DIR/config.js"
  mv "$WEB_DIR/$FRONTEND_CONFIG_SRC" "$WEB_DIR/config.js"
else
  echo "⚠️  警告: フロントエンド用の設定ファイルが見つかりません: ${FRONTEND_CONFIG_SRC}"
fi
echo "✅ フロントエンドのデプロイ完了。"

echo "--- 全てのデプロイ処理が正常に完了しました ---"
